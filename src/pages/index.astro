---
import ContentInputs from "../components/ContentInputs.astro"
import ContentButton from "../components/ContentButton.astro"
---

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
	<title>Captcha Generator</title>
</head>
<body class="h-screen flex justify-center items-center bg-[#826afb]">
	<main class="relative max-w-[300px] w-full rounded-xl p-6 bg-white shadow-md flex flex-col gap-2">
		<ContentInputs />

		<ContentButton />
	</main>

	<style is:global>
		.submit_btn.disabled {
			opacity: 0.6;
			pointer-events: none;
		}

		.message.active {
			display: block;
		}
	</style>

	<script is:inline>
		const captchaTextBox = document.querySelector(".captcha_box");
		const refreshButton = document.querySelector(".refresh_btn");
		const captchaInputBox = document.querySelector(".captcha_inp");
		const message = document.querySelector(".message");
		const submitButton = document.querySelector(".submit_btn");

		// Variable to store generate
		let captchaText = null;

		// Function to generate captcha random
		const generateCaptcha = () => {
			const randomString = Math.random().toString(36).substring(2, 7);
			const randomStringArray = randomString.split("");
			const changeString = randomStringArray.map(char => Math.random() > 0.5 ? char.toUpperCase() : char)
			captchaText = changeString.join(" ");
			captchaTextBox.value = captchaText;
			console.log(captchaText);
		}

		// 
		const refreshBtnClick = () => {
			generateCaptcha();
			captchaInputBox.value = "";
			captchaKeyUpValidate();
		}

		const captchaKeyUpValidate = () => {
			// Toggle submit button disable
			submitButton.classList.toggle("disabled", !captchaInputBox.value);

			if(captchaInputBox.value === "") message.classList.remove("active");
		}

		const submitBtnClick = () => {
			captchaText = captchaText
				.split("")
				.filter((char) => char !== " ")
				.join("");

				message.classList.add("active");
				// Check if the entered captcha text is correct or not
				if(captchaInputBox.value === captchaText){
					message.innerText = "Entered captcha is correct";
					message.style.color = "#826afb";
				} else {
					message.innerText = "Entered captcha is not correct";
					message.style.color = "#ff2525";
				}
		}

		// Add event listeners for the refresh button
		refreshButton.addEventListener("click", refreshBtnClick);
		captchaInputBox.addEventListener("keyup", captchaKeyUpValidate);
		submitButton.addEventListener("click", submitBtnClick);

		// Generate a captcha with page loads
		generateCaptcha();

	</script>
</body>
</html>